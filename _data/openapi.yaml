openapi: 3.0.0
info:
  title: Modular Big IP Applications
  description: >-
    This is the current OpenAPI definition for the modular big IP applications.
  version: 1.0.0
servers:
  - url: 'https://10.144.128.27'
paths:
  /icontrol/v1/applications:
    get:
      summary: Get Applications
      description: Get all applications.
      operationId: getApplications
      parameters:
        - name: filter
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/filter'
          examples:
            get_application_where_limit:
              $ref: '#/components/examples/get_applications'
      responses:
        '200':
          description: Array of App model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application'
              examples:
                get_application_where_limit:
                  $ref: '#/components/examples/get_applications'
      tags:
        - Applications
    post:
      summary: Add Application
      description: Adds an application.
      operationId: postApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/application'
            examples:
              post_application_request:
                $ref: '#/components/examples/post_application_request'
      responses:
        '200':
          description: App model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
              examples:
                add_application_basic:
                  $ref: '#/components/examples/post_application_response'
        '400':
          description: oren haia po
      tags:
        - Applications
  /icontrol/v1/applications/all:
    get:
      summary: Get Applications All
      description: Get all applications with all sub-resource.
      operationId: getAllApplications
      parameters:
        - name: filter
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/filter'
          examples:
            get_application_where_limit:
              $ref: '#/components/examples/get_applications_all'
      responses:
        '200':
          description: Array of App model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application'
              examples:
                get_application_where_limit:
                  $ref: '#/components/examples/get_applications'
      tags:
        - Applications
    post:
      summary: Add Application All
      description: Ad all applications with all sub-resource.
      operationId: postAllApplications
      parameters:
        - name: filter
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/filter'
          examples:
            get_application_where_limit:
              $ref: '#/components/examples/post_application_response_all'
      responses:
        '200':
          description: Array of App model instances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application'
              examples:
                get_application_where_limit:
                  $ref: '#/components/examples/post_application_response_all'
      tags:
        - Applications
  '/icontrol/v1/applications/{id}':
    put:
      summary: Update Application
      description: Full update of a single application.
      operationId: putApplication
      parameters:
        - name: id
          in: path
          schema:
            type: string
          examples:
            put_application_basic:
              $ref: '#/components/examples/put_application_request'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/application'
      responses:
        '204':
          description: App PUT success
      tags:
        - Applications
    patch:
      summary: Partial Application Update
      description: Performs a partial update on an application.
      operationId: patchApplication
      parameters:
        - name: id
          in: path
          schema:
            type: string
          examples:
            put_application_basic:
              $ref: '#/components/examples/patch_application_request'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/application'
      responses:
        '204':
          description: App PATCH success
      tags:
        - Applications
    get:
      summary: Get Application
      description: Gets an individual application.
      operationId: getApplication
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: App model instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
              examples:
                put_application_basic:
                  $ref: '#/components/examples/get_application_response'
      tags:
        - Applications
    delete:
      summary: Delete Application
      description: Deletes an individual application.
      operationId: deleteApplication
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: App DELETE success
      tags:
        - Applications
components:
  examples:
    post_application_request:
      summary: This is a basic example to add new application.
      value:
        name: Your Application Name
    post_application_response:
      summary: The reponse for a basic adding of application.
      value:
        id: 219f89d0-36cd-11e9-84f8-5bfba9e00514
        name: Test 3
    post_application_response_all:
      summary: The reponse for a basic adding of application and all sub-resources.
      value:
        name: app1
        description: app1description
        virtual:
          name: vs1
          destination:
            destinationAddress: 33.2.5.6
            port: '88'
        pool:
          name: pool1
          members:
            - name: member1
              endpoint:
                address: 66.4.5.6
                port: '88'
        clientSSLProfiles:
          - name: clientSSLProfile1
            clientSSLCertificatePairs:
              - name: test123
                certificateContent: cert1
                certificateKeyContent: key1
    get_applications:
      summary: Example of get applications.
      value:
        - id: '1'
          name: Test
          selfLink: 'http://localhost:5000/icontrol/v1/applications/1'
    get_applications_all:
      summary: Example of get applications.
      value:
        - id: '1'
          name: Test
          selfLink: 'http://localhost:5000/icontrol/v1/applications/1'
    get_applications_count:
      summary: Returns the counts of applications.
      value:
        count: 2
    get_application_where_limit:
      summary: 'Basic where filter by name, with a limit of 3.'
      value: 'filter[where][name]=John&amp;filter[limit]=3'
    put_application_request:
      summary: This is a basic example to do a full update of an application.
      value:
        name: Your Application Name
    patch_application_request:
      summary: This is a basic example to do a partial update of an application.
      value:
        name: Your Application Name
    get_application_response:
      summary: This shows a response for getting a response.
      value:
        id: 219f89d0-36cd-11e9-84f8-5bfba9e00514
        name: Your Application Name
        selfLink: >-
          https://localhost:5443/icontrol/v1/applications/219f89d0-36cd-11e9-84f8-5bfba9e00514
  schemas:
    application:
      title: Application
      type: object
      properties:
        id:
          type: string
          description: Application ID
          x-f5-required: true
          x-f5-id: true
          x-f5-defaultFn: uuid
          x-f5-updateOnly: false
          x-f5-mappings:
            - destinationClass: profile_tcp
              destinationField: name
              prefix: /Common/tcp_profile_for_
            - destinationClass: profile_tcp
              destinationField: object_id
              conversion: hash
            - destinationClass: profile_tcp
              destinationField: keep_alive_interval
              conversion: constant
              argument: '3600'
            - destinationClass: profile_http
              destinationField: server_agent_name
              conversion: constant
              argument: STMM
            - destinationClass: profile_http
              destinationField: name
              prefix: /Common/http_profile_for_
            - destinationClass: profile_http
              destinationField: object_id
              conversion: hash
        name:
          type: string
        selfLink:
          type: string
      x-f5-relations:
        virtual:
          type: hasOne
          model: Virtual
          foreignKey: applicationId
          primaryKey: id
          options:
            validate: true
            forceId: true
            nestRemoting: true
        pool:
          type: hasOne
          model: Pool
          foreignKey: applicationId
          options:
            validate: true
            forceId: true
            nestRemoting: true
        ssl-server-profiles:
          type: hasOne
          model: SslServerProfile
          foreignKey: applicationId
          options:
            validate: true
            forceId: true
            nestRemoting: true
        ssl-client-profiles:
          type: hasOne
          model: SslClientProfile
          foreignKey: applicationId
          options:
            validate: true
            forceId: true
            nestRemoting: true
        http2-client-profiles:
          type: hasOne
          model: Http2ClientProfile
          foreignKey: applicationId
          options:
            validate: true
            forceId: true
            nestRemoting: true
    filter:
      title: filter
      type: array
      properties:
        where:
          items:
            type: string
        fields:
          items:
            type: string
        offset:
          type: integer
          minimum: 0
        limit:
          type: integer
          minimum: 0
        skip:
          type: integer
          minimum: 0
        order:
          type: array
          items:
            type: string
        include:
          type: array
          items:
            type: string
